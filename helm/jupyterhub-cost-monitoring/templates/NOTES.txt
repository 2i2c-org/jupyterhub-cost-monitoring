{{- /* Generated with https://patorjk.com/software/taag/#p=display&f=Small%20Slant&t=jupyterhub%20cost%20monitoring */}}
       _                   __            __          __  
      (_)_  ______  __  __/ /____  _____/ /_  __  __/ /_ 
     / / / / / __ \/ / / / __/ _ \/ ___/ __ \/ / / / __ \
    / / /_/ / /_/ / /_/ / /_/  __/ /  / / / / /_/ / /_/ /
 __/ /\__,_/ .___/\__, /\__/\___/_/__/_/_/_/\__,_/_.___/ 
/___/   __/_/____/____/_/ /_     _/ /_/ /_/ /            
       / ___/ __ \/ ___/ __/    / __/ __/ __/            
      / /__/ /_/ (__  ) /_     (_  |_  |_  )             
      \___/\____/____/\__/_ __/  _/  _/  _/_             
   ____ ___  ____  ____  (_) //_/_/_/_/_/_(_)___  ____ _ 
  / __ `__ \/ __ \/ __ \/ / __/ __ \/ ___/ / __ \/ __ `/ 
 / / / / / / /_/ / / / / / /_/ /_/ / /  / / / / / /_/ /  
/_/ /_/ /_/\____/_/ /_/_/\__/\____/_/  /_/_/ /_/\__, /   
                                               /____/    

Thank you for installing {{ .Chart.Name }}!

### Installation info

  - Kubernetes namespace: {{ .Release.Namespace }}
  - Helm release name:    {{ .Release.Name }}
  - Helm chart version:   {{ .Chart.Version }}
  - GitHub repo:          https://github.com/2i2c-org/jupyterhub-cost-monitoring

### Post-installation checklist

  - Verify that created Pods enter a Running state:

      kubectl --namespace={{ .Release.Namespace }} get pod

    If a pod is stuck with a Pending or ContainerCreating status, diagnose with:

      kubectl --namespace={{ .Release.Namespace }} describe pod <name of pod>

    If a pod keeps restarting, diagnose with:

      kubectl --namespace={{ .Release.Namespace }} logs --previous <name of pod>
  {{- println }}



{{- /*
  Breaking changes.
*/}}

{{- $breaking := "" }}
{{- $breaking_title := "\n" }}
{{- $breaking_title = print $breaking_title "\n#################################################################################" }}
{{- $breaking_title = print $breaking_title "\n######   BREAKING: The config values passed contained no longer accepted    #####" }}
{{- $breaking_title = print $breaking_title "\n######             options. See the messages below for more details.        #####" }}
{{- $breaking_title = print $breaking_title "\n######                                                                      #####" }}
{{- $breaking_title = print $breaking_title "\n######             To verify your updated config is accepted, you can use   #####" }}
{{- $breaking_title = print $breaking_title "\n######             the `helm template` command.                             #####" }}
{{- $breaking_title = print $breaking_title "\n#################################################################################" }}


{{- /*
  This is an example (in a helm template comment) on how to detect and
  communicate with regards to a breaking chart config change.

  {{- if hasKey .Values.singleuser.cloudMetadata "enabled" }}
  {{- $breaking = print $breaking "\n\nCHANGED: singleuser.cloudMetadata.enabled must as of 1.0.0 be configured using singleuser.cloudMetadata.blockWithIptables with the opposite value." }}
  {{- end }}
*/}}

{{- if $breaking }}
{{- fail (print $breaking_title $breaking "\n\n") }}
{{- end }}
